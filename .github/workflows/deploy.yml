name: map-update-to-the-appropriate-lambda_function
# on:
#   push:
#     paths:
#       - '**/lambda_function_1/**'
on:
  push
env:
  AWS_REGION: ap-south-1

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  map-commit-to-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::039519066345:role/admin_for_gitRole
          role-session-name: temporarylambdasession
          aws-region: ap-south-1
      - name: test echo command
        run: |
          echo "very soon an aws command will run \
          in place of this echo command.."
      - name: checking around and within the working directory
        run: |
          pwd
          ls $(pwd)
      
      - name: show branch
        run: git branch --show

      - name: putting last modified file paths in a variable
        id: modded_paths
        # run: echo "modded_paths=$(git diff --name-only -r ${{ github.event.after }} ${{ github.event.before }})" >> $GITHUB_OUTPUT
        run: echo "modded_paths=$(git diff --name-only -r ${{ github.event.after }} ${{ github.event.before }} | xargs )" >> $GITHUB_OUTPUT
      
      - name: echoing variable storing last modified file paths
        env:
          modded_paths: ${{ steps.modded_paths.outputs.modded_paths }}
        run: |
          for path in $modded_paths; do
            echo $path
            if [[ $path =~ lambda_function\.py$ ]]; then
                function_name=$(echo $name | rev | cut -d "/" -f 2 | rev)
                zip -j function.zip $path
                aws lambda update-function-code --function-name "$function_name" --zip-file fileb://function.zip
            fi
          done
